$box-size: calc(100vw / 27);
$box-min-size: 48px;
$box-color: rgb(253, 255, 231);

$helper-value-color: rgb(96, 96, 96);
$value-color: rgb(0, 98, 234);
$given-color: black;
$conflicted-color: red;

.puzzle {
    position: absolute;
    top: calc(50% - #{$box-size} * 4.5);
    left: calc(50% - #{$box-size} * 4.5);
    border: 2px solid black;
    box-shadow: 0 0 5px 1px black;
    user-select: none;

    td {
        padding: 0;
        margin: 0;
        width: $box-size;
        height: $box-size;
        min-width: $box-min-size;
        min-height: $box-min-size;

        > .box {
            width: 100%;
            height: 100%;
            position: relative;
            background-color: $box-color;
            border: 1px solid black;
            cursor: pointer;
            transition: filter 0.1s ease, box-shadow 0.1s ease;

            > .value,
            > .helper-value {
                font-size: calc(#{$box-size} * 0.75);
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                text-align: center;
                line-height: $box-size;
            }

            > .value {
                color: $value-color;
            }

            > .helper-value {
                color: $helper-value-color;
            }

            > .helpers {
                display: flex;
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                flex-direction: row;
                flex-wrap: wrap;

                > .helper {
                    width: calc(#{$box-size} / 3 - 1px);
                    height: calc(#{$box-size} / 3 - 1px);
                }
            }

            &.given {
                &:not(.conflicted) {
                    > .value {
                        color: $given-color;
                    }
                }
                &.conflicted {
                    font-weight: bold;
                }
            }

            &.conflicted {
                > .value {
                    color: $conflicted-color;
                }
            }

            &.boundary-north {
                border-top: 2px solid black;
            }

            &.boundary-east {
                border-right: 2px solid black;
            }

            &.boundary-south {
                border-bottom: 2px solid black;
            }

            &.boundary-west {
                border-left: 2px solid black;
            }

            &:hover {
                filter: brightness(1.25);
                box-shadow: inset 0 0 2px 1px black;
            }
        }
    }
}