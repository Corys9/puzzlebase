@inherits CodeBehind.PuzzleBoxBase
@using Bitmasks

@{
    var given = IsGiven ? "given" : string.Empty;

    var boundaryNorth = (Boundary & BoundaryBitmask.North) != BoundaryBitmask.None
        ? "boundary-north" : string.Empty;
    var boundaryEast = (Boundary & BoundaryBitmask.East) != BoundaryBitmask.None
        ? "boundary-east" : string.Empty;
    var boundarySouth = (Boundary & BoundaryBitmask.South) != BoundaryBitmask.None
        ? "boundary-south" : string.Empty;
    var boundaryWest = (Boundary & BoundaryBitmask.West) != BoundaryBitmask.None
        ? "boundary-west" : string.Empty;

    var conflicted = IsConflicted ? "conflicted" : string.Empty;
}

<td>
    <div class="box @given @boundaryNorth @boundaryEast @boundarySouth @boundaryWest @conflicted" id="box-@ID">
        <div class="value">@Value</div>
        <div class="helper-value">@HelperValue</div>
        <div class="helpers">
            @for (var i = 1; i <= 9; ++i)
            {
                var digit = i;

                <div class="helper" id="helper-@i"
                     @onmouseover="() => Helper_MouseOver(digit)"
                     @onmouseout="Helper_MouseOut"
                     @onclick="() => Helper_Click(digit)"></div>
            }
        </div>
    </div>
</td>